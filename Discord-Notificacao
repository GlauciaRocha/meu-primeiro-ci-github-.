# Nome do seu workflow (aparecerá na aba 'Actions' do GitHub)
name: Notificação Discord de Status do CI

# Gatilhos: Quando este workflow deve ser executado
on:
  push:
    branches:
      - main # Dispara em cada 'push' para a branch 'main'
  pull_request:
    branches:
      - main # Dispara quando um 'Pull Request' é aberto para a branch 'main'
  workflow_dispatch: # Permite disparo manual via interface do GitHub

# Define os jobs (tarefas) que este workflow irá executar
jobs:
  exemplo_de_job_com_notificacao: # Nome do seu job
    runs-on: ubuntu-latest # A máquina virtual (runner) hospedada pelo GitHub

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4 # Clona o seu repositório na máquina do runner

      - name: Executar um Comando de Exemplo (Build/Teste)
        # Este é um placeholder. Em um projeto real, você teria seus comandos de build, teste, etc.
        # Por exemplo:
        # uses: actions/setup-node@v3
        # with:
        #   node-version: '16'
        # run: |
        #   npm install
        #   npm test
        run: |
          echo "Este é um passo de exemplo. Em um cenário real, seria um build ou teste."
          # Para testar a notificação de FALHA, você pode DESCOMENTAR a linha abaixo
          # e COMENTAR 'exit 0'.
          # exit 1 # Isso fará o passo falhar e o job reportará falha

          # Para testar a notificação de SUCESSO, certifique-se de que o passo termina com sucesso
          exit 0 # Isso fará o passo terminar com sucesso


      # --- Notificação de SUCESSO no Discord ---
      # Este passo só será executado se TODOS os passos anteriores neste job forem bem-sucedidos.
      - name: Notificar Sucesso no Discord
        if: success() # Condição: Este passo só roda se o status do job for 'success'
        uses: actions/discord-webhook@v3 # Action do Marketplace para enviar mensagens ao Discord
        with:
          # A URL do Webhook do Discord, acessada de forma segura a partir do seu Segredo do GitHub.
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }} 
          # Conteúdo da mensagem. Use variáveis do GitHub Actions para tornar a mensagem dinâmica.
          content: '✅ *SUCESSO:* O workflow `{{ github.workflow }}` no repositório `${{ github.repository }}` (`${{ github.ref_name }}`) foi concluído com sucesso! :partying_face: [Ver Detalhes](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})'
          # Você pode personalizar o nome de usuário e o avatar do bot no Discord para esta mensagem:
          # username: 'Bot de Sucesso CI'
          # avatar_url: 'https://cdn-icons-png.flaticon.com/512/190/190411.png' # Exemplo de URL de ícone de sucesso

      # --- Notificação de FALHA no Discord ---
      # Este passo só será executado se ALGUM passo anterior neste job tiver falhado.
      - name: Notificar Falha no Discord
        if: failure() # Condição: Este passo só roda se o status do job for 'failure'
        uses: actions/discord-webhook@v3 # Reutiliza a mesma Action de Webhook
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: '❌ *FALHA:* O workflow `{{ github.workflow }}` no repositório `${{ github.repository }}` (`${{ github.ref_name }}`) FALHOU! :skull_and_crossbones: [Ver Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})'
          # username: 'Bot de Falha CI'
          # avatar_url: 'https://cdn-icons-png.flaticon.com/512/179/179040.png' # Exemplo de URL de ícone de erro


```
